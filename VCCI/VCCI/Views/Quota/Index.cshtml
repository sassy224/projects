@model IEnumerable<VCCI.DAL.Quota>
@{
    ViewBag.Title = "Danh sách thông tin";
}
<p>
    @Html.ActionLink("Thêm mới", "Create")
</p>
@*<table>
    <tr>
        <th width="20%">
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th width="40%">
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th width="20%">
            @Html.DisplayNameFor(model => model.CreatedBy)
        </th>
        <th width="20%">
            @Html.DisplayNameFor(model => model.CreatedAt)
        </th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                <p>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID })
                    <br />
                    @if (User.IsInRole("Admin"))
                    {
                
                        @Html.ActionLink("Details", "Details", new { id = item.ID }) <br />
                        @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                    }
                </p>
            </td>
        </tr>
    }
</table>*@
<h2>
    Bảng thông tin</h2>
<div id="divgrid">
    @{
		var grid = new WebGrid(Model, defaultSort: "CreatedAt DESC", rowsPerPage: 20, canSort: true, ajaxUpdateContainerId: "divgrid");
    }

    @if (User.IsInRole("Admin"))
    {
        @grid.GetHtml(
            columns: grid.Columns(
                grid.Column("Title", header: "Tiêu đề", format: @<text>@Html.ActionLink((string)item.Title, "Edit", "Quota", new { id = item.ID }, null)</text>, style: "colTitle"),

                grid.Column("Description", header: "Mô tả", format: @<pre style="font-family:'Segoe UI', Verdana, Helvetica, Sans-Serif;">@item.Description</pre>, style: "colDescription"),

				grid.Column("CreatedBy", header: "Người tạo", format: @<text>@item.CreatedBy</text>, style: "colCreatedBy"),

				grid.Column("Department", header: "Phòng ban", format: @<text>@item.Department.Name</text>, style: "colDepartment"),

				grid.Column("CreatedAt", header: "Thời gian tạo", format: @<text>@item.CreatedAt</text>, style: "colCreatedAt"),

				grid.Column(header: "", format: @<text>@Html.ActionLink("Delete", "Delete", "Quota", new { id = item.ID }, null)</text>)
			),
			tableStyle: "table table-bordered table-striped"
		)
	}
	else
	{
        @grid.GetHtml(
			columns: grid.Columns(
				grid.Column("Title", header: "Tiêu đề", format: @<text>@Html.ActionLink((string)item.Title, "Edit", "Quota", new { id = item.ID }, null)</text>, style: "colTitle"),

				grid.Column("Description", header: "Mô tả", format: @<pre style="font-family:'Segoe UI', Verdana, Helvetica, Sans-Serif;">@item.Description</pre>, style: "colDescription"),

				grid.Column("CreatedBy", header: "Người tạo", format: @<text>@item.CreatedBy</text>, style: "colCreatedBy"),

				grid.Column("Department", header: "Phòng ban", format: @<text>@item.Department.Name</text>, style: "colDepartment"),

				grid.Column("CreatedAt", header: "Thời gian tạo", format: @<text>@item.CreatedAt</text>, style: "colCreatedAt")
			),
			tableStyle: "table table-bordered table-striped"
		)
	}
</div>
